version: "3.9"

services:
  # Public entrypoint. Handles HTTP->HTTPS, certs, and routing.
  caddy:
    image: caddy:2
    container_name: caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    environment:
      - FRONTEND_DOMAIN=${FRONTEND_DOMAIN}
      - FRONTEND_WWW_DOMAIN=${FRONTEND_WWW_DOMAIN}
    volumes:
      - ./deploy/Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - frontend
      - backend

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
      args:
        VITE_API_BASE_URL: ${API_BASE_URL}
    container_name: frontend
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: backend
    restart: unless-stopped
    env_file:
      - ./backend/.env.production
    environment:
      - ENV=production
      - ALLOWED_HOSTS=${FRONTEND_DOMAIN},${FRONTEND_WWW_DOMAIN}
      - CSRF_TRUSTED_ORIGINS=https://${FRONTEND_DOMAIN},https://${FRONTEND_WWW_DOMAIN}
      - CORS_ALLOWED_ORIGINS=https://${FRONTEND_DOMAIN},https://${FRONTEND_WWW_DOMAIN}
    depends_on:
      - db

  db:
    image: pgvector/pgvector:pg16
    container_name: chat_db
    restart: unless-stopped
    env_file:
      - ./backend/.env.production
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./deploy/db-init:/docker-entrypoint-initdb.d

volumes:
  postgres_data:
  caddy_data:
  caddy_config:
